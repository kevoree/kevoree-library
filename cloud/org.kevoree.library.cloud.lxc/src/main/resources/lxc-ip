#!/bin/bash

# jedartois@gmail.com

# What lxc container to clone
LXC_BASE=""
# $2 is a path to bind mount e.g. /tmp/foo.
LXC_BIND=""

usage() {
    echo "usage: lxc-ip -n name"
}

help() {
    usage
    echo
    echo "Get IP of a container"
    echo
    echo "Options:"
    echo "name        : name of the container"
    echo
    echo "if a COMMAND is given, then the container will run only as long"
    echo "as the command runs.  If no COMMAND is given, this command will"
    echo "wait until the container is shut down"
}

shortoptions='h:n:'
longoptions='help,name:'

LXC_RUNNING=0

getopt=$(getopt -o $shortoptions --longoptions  $longoptions -- "$@")
if [ $? != 0 ]; then
    usage
    exit 1;
fi

eval set -- "$getopt"

while true; do
    case "$1" in
        -h|--help)
            help
            exit 1
            ;;
        -n|--name)
            shift
            LXC_NAME=$1
            shift
            ;;
        --)
            shift
            break;;
        *)
            echo $1
            usage
            exit 1
            ;;
    esac
done

COMMAND=$@
COMMAND_LENGTH=$#
LXC_USER=${LXC_USER:-`id -un`}

# validation

if [ -z $LXC_NAME ]; then
    echo "container must be specified"
    usage
    exit 1
fi
if [ ! -d /var/lib/lxc/$LXC_NAME ] ; then
    echo "no such lxc container $LXC_NAME"
    exit 1
fi

get_ip()
{
    # Get init's PID
    PID=$(sudo lxc-info -n $1 -p | awk '{print $2}')
    [ "$PID" = "-1" ] && return 1

    # Get some unique path
    DST=$(sudo mktemp -u --tmpdir=/run/netns/)
    NAME=$(basename $DST)

    # Prepare the /run/netns entry for "ip netns"
    sudo mkdir -p /run/netns
    sudo ln -s /proc/$PID/ns/net $DST

    # Grab all the public globally routed IPv4 and IPv6 addresses
    (sudo ip netns exec $NAME ip -4 addr show scope global && \
        sudo ip netns exec $NAME ip -6 addr show scope global) | grep inet | while read line; do
        ip=$(echo $line | awk '{print $2}' | cut -d '/' -f1)
        echo "$ip"
    done

    sudo rm $DST
}

do_work()
{
    #sudo lxc-wait -s RUNNING -n $LXC_NAME
    LXC_RUNNING=1

    # When lxc-attach support arrives in the kernel, we can switch to
    # that.
    # Meanwhile, we use get_ip to wait for container's network to be up
    # and to obtain the ip address, then we can ssh to the lxc.
    TRIES=60
    FAILED=1

    # Repeatedly try to connect over SSH until we either succeed
    # or time out.
    for i in $(seq 1 $TRIES); do
        # We call get_ip inside the loop to ensure the correct ip
        # is retrieved even in the case the DHCP ip assignment
        # changes during the process.
        IP_ADDRESS=$(get_ip $LXC_NAME)
        if [ -z "$IP_ADDRESS" ]; then
            sleep 1
            continue
        fi
        echo $IP_ADDRESS
        return 0
    done

    echo "could not get IP address - aborting." >&2
}

do_work
